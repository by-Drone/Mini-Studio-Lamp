#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

int ledPin = 14;
int fanPin = 10;
int sensorPin = 28;
int potPin = 26;
int sensorValue = 0;
int potValue = 0;

int frame = 0;

const float t_fact = 3.3 / 1023;


// The pins for I2C are defined by the Wire-library.
// On an arduino UNO:       A4(SDA), A5(SCL)
#define OLED_RESET     4
#define SCREEN_ADDRESS 0x3C
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

static const uint8_t  PROGMEM ui[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0x00, 0x00, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0e, 0x00, 0x00, 0x80, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0x0f, 0xf8, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x70, 0x3f, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0xe0, 0x03, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc1, 0xc0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x80, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xc0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0c, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x00, 0x00, 0x09, 0x80, 0x00, 0x00, 0x00, 0x07, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x00, 0x00, 0x0d, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x05, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x1f, 0xfc, 0xc0, 0x00, 0x00, 0x04, 0x9f, 0xfc, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x04, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x05, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x0d, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x40, 0x00, 0x00, 0x0d, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x60, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x18, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x30, 0x00, 0x00,
  0x00, 0x00, 0x0c, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x78, 0x00, 0x00,
  0x00, 0x00, 0x0c, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x48, 0x00, 0x00,
  0x00, 0x00, 0x26, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x60, 0x68, 0x00, 0x00,
  0x00, 0x00, 0x63, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x70, 0x39, 0xe0, 0x00,
  0x00, 0x00, 0xc3, 0x00, 0x00, 0x61, 0xc0, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x38, 0x03, 0xf0, 0x00,
  0x00, 0x01, 0x81, 0x80, 0x00, 0x40, 0xe0, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x1c, 0x06, 0x10, 0x00,
  0x00, 0x03, 0x00, 0xc0, 0x00, 0xc0, 0x30, 0x00, 0x00, 0x00, 0x18, 0x00, 0x0e, 0x06, 0x00, 0x00,
  0x00, 0x06, 0x00, 0xc0, 0x01, 0x80, 0x1c, 0x00, 0x00, 0x00, 0x18, 0x00, 0x06, 0x0c, 0x00, 0x00,
  0x00, 0x0c, 0x00, 0x60, 0x03, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x30, 0x00, 0x06, 0x04, 0x00, 0x00,
  0x00, 0x18, 0x00, 0x20, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x30, 0x00, 0x03, 0x06, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x03, 0x07, 0x38, 0x00,
  0x00, 0x00, 0x00, 0x30, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x03, 0x03, 0xf0, 0x00,
  0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x03, 0x01, 0xe0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x06, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x0e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x1c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x38, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x70, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


const unsigned char frame_1 [] PROGMEM = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x07, 
  0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x9e, 0x00, 0x03, 0xbf, 0x00, 0x01, 0x5f, 0x00, 0x00, 0x03, 
  0x00, 0x00, 0xe1, 0x00, 0x01, 0xe0, 0x00, 0x03, 0xe0, 0x00, 0x07, 0xc0, 0x00, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'anim_frame_2', 16x9px
// spinning inner part of the turbocharher icon, frame 2
const unsigned char frame_2 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
  0x3e, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x78, 0x00, 0x08, 0x70, 0x00, 0x0c, 0x00, 0x00, 0x0f, 0xa8, 
  0x00, 0x0f, 0xdc, 0x00, 0x07, 0x9e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0c, 0x00, 
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0
};
// 'anim_frame_3', 16x9px
// spinning inner part of the turbocharher icon, frame 3
const unsigned char frame_3 [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x07, 
  0xc0, 0x00, 0x03, 0xe0, 0x00, 0x01, 0xe0, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x03, 0x00, 0x01, 0x5f, 
  0x00, 0x03, 0xbf, 0x00, 0x07, 0x9e, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 144)
const int epd_bitmap_allArray_LEN = 3;
const unsigned char* fan[3] = {
 frame_1,
 frame_2,
 frame_3
};



static const uint8_t  PROGMEM fan1[] = { 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x07, 
  0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x9e, 0x00, 0x03, 0xbf, 0x00, 0x01, 0x5f, 0x00, 0x00, 0x03, 
  0x00, 0x00, 0xe1, 0x00, 0x01, 0xe0, 0x00, 0x03, 0xe0, 0x00, 0x07, 0xc0, 0x00, 0x01, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };
  static const uint8_t  PROGMEM fan2[] = { 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 
  0x3e, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x78, 0x00, 0x08, 0x70, 0x00, 0x0c, 0x00, 0x00, 0x0f, 0xa8, 
  0x00, 0x0f, 0xdc, 0x00, 0x07, 0x9e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x0c, 0x00, 
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };
  static const uint8_t  PROGMEM fan3[] = { 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x07, 
  0xc0, 0x00, 0x03, 0xe0, 0x00, 0x01, 0xe0, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x03, 0x00, 0x01, 0x5f, 
  0x00, 0x03, 0xbf, 0x00, 0x07, 0x9e, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };


void setup() {

  Serial.begin(9600);

 pinMode(fanPin, OUTPUT);
 pinMode(ledPin, OUTPUT);

 
  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;); // Don't proceed, loop forever
  }

  display.display(); // the library initializes this with an Adafruit splash screen.
  delay(2000); // Pause for 2 seconds

  display.clearDisplay();
  
}

void loop() {

  sensorData();
  display.clearDisplay();
}

void sensorData() {
//--------------------------------------------------------
  sensorValue = analogRead(sensorPin);
  float voltage = sensorValue * t_fact;
  float temperatureC = (voltage - 0.5) * 100 ;
//--------------------------------------------------------
  Serial.println(voltage);


  
//--------------------------------------------------------
  potValue = analogRead(potPin);
  int  brightness = 100 - (potValue * 100 / 1023);
  int fadeValue = map(potValue, 0, 1023, 0, 255);   // sets the value (range from 0 to 255):
//--------------------------------------------------------
 




 //------------------------------------------------------- 
  display.drawBitmap(0, 0, ui, 128, 64, 1);
  display.setTextSize(1);
  display.setCursor(26, 28);
  display.setTextColor(SSD1306_WHITE);
  display.print(brightness);

  //display.setCursor(108, 28);
  display.setCursor(88, 48);
  display.setTextSize(1);
  display.print(int(temperatureC));
//--------------------------------------------------------

  
if ((int(temperatureC) >= 30) && (int(temperatureC) <= 35)){
        
      analogWrite(ledPin, fadeValue);
      digitalWrite(fanPin, HIGH);
      display.drawBitmap(60, 0, fan[frame], 20, 20, 1);

}
else if (int(temperatureC) > 35){

      analogWrite(ledPin, 0);
      digitalWrite(fanPin, HIGH);
      display.drawBitmap(60, 0, fan[frame], 20, 20, 1);

 }

 
 else {
  
      analogWrite(ledPin, fadeValue);
      digitalWrite(fanPin, LOW);

  }
 
//--------------------------------------------------------
 frame = frame+1;            // increase the frame for the inner part of the icon
  if (frame > 1) {frame = 0;}
  display.display();
  display.clearDisplay();
  delay(500);
}
	
